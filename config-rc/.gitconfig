[user]
	name = Trevor Suarez
	email = rican7@gmail.com
	signingkey = B49DD3EE19CE2D99
[github]
	user = Rican7
[alias]
	st = status
	ci = commit -v
	br = branch
	co = checkout
	df = diff
	dft = difftool
	diffc = diff --cached
	dfc = diff --cached
	dftc = difftool --cached
	diffpager = !git diff --color=always | less -R
	diffp = !git diffpager
	dfp = !git diffpager
	s = status -s
	branchname = rev-parse --abbrev-ref HEAD
	defaultbranchname = "!{ git symbolic-ref -q --short refs/remotes/origin/HEAD || git rev-parse --abbrev-ref --verify refs/heads/master 2>/dev/null || git config --get init.defaultBranch ; } | sed --posix 's/^\\(.*\\/\\)\\{0,1\\}origin\\///g'"
	files = diff --name-only
	last = diff --name-only HEAD^!
	files-status = diff --name-status
	last-status = diff --name-status HEAD^!
	files-stat = diff --stat
	last-stat = diff --stat HEAD^!
	showfiles = show --name-only
	showlast = show --name-only HEAD^!
	showfiles-status = show --name-status
	showlast-status = show --name-status HEAD^!
	showfiles-stat = show --stat
	showlast-stat = show --stat HEAD^!
	excluded = ls-files --others --ignored --exclude-standard
	untracked = ls-files --others --exclude-standard
	lg = log --all --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
	lgbranch = !git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --first-parent --no-merges "$(git defaultbranchname)"..HEAD
	mergelog = log --pretty=oneline --abbrev-commit --merges
	mergelogpr = !git mergelog -i --grep 'pull request'
	worklog = log --pretty=' - %s%n%n%w(0,4,4)%-b' --reverse --no-merges
	worklogbranch = !git worklog --first-parent "$(git defaultbranchname)"..HEAD
	authors = !git log --pretty='%ae (%ce)' | sort -u
	pushhead = push origin HEAD
	pushup = push upstream HEAD
	mergeflow = !git merge --no-ff
	fall = fetch --all
	pullbase = pull --rebase
	remoteclean = remote prune # No shorter, but more semantic.... at least to me. :P
	merged = branch --no-contains HEAD --merged HEAD
	notmerged = branch --no-contains HEAD --no-merged HEAD
	squashmerged = !git notmerged --format='%(refname:short)' | xargs --no-run-if-empty -I{} sh -c 'MERGE_BASE=$(git merge-base HEAD {}) && [[ $(git cherry HEAD $(git commit-tree $(git rev-parse {}^{tree}) -p $MERGE_BASE -m _)) == "-"* ]] && echo {}'
	localcleanmerged = !git merged --format='%(refname:short)' | xargs --no-run-if-empty git branch -d
	localcleansquashmerged = !git squashmerged | xargs --no-run-if-empty git branch -D
	localclean = !git localcleanmerged && git localcleansquashmerged
	subsync = submodule sync --recursive
	subupdate = submodule update --init --recursive --checkout
	syncup = !git checkout "$(git defaultbranchname)" && git pullbase upstream "$(git defaultbranchname)" && git subsync && git subupdate
	syncthis = !git pullbase origin "$(git branchname)" && git subsync && git subupdate
	syncthisup = !git pullbase upstream "$(git branchname)" && git subsync && git subupdate
	syncstate = !git fall && git syncthis && git remoteclean origin
	syncstateup = !git fall && git syncthisup && git remoteclean upstream
	syncstateflow = !git fall && git syncthisup && git pushhead && git remoteclean upstream && git remoteclean origin
	call = !git ci -a
	orphaned = clean -nd
	addnew = !git add "$(git untracked)"
	revision = rev-parse HEAD
	revisionshort = rev-parse --short HEAD
	root = rev-parse --show-toplevel
	latesttag = !git describe --tags "$(git rev-list --tags --max-count=1)"
	releasename = !git describe --exact-match --abbrev=0 2>/dev/null || git rev-parse --short HEAD
	branchliststatus = !git remote update && git branch --list -vv
	branchls = !git branchliststatus --color=always | sed --posix 's/].*/]/g'
	datenow = "!git filter-branch -f --setup 'NOW_DATE=$(date)' --env-filter 'GIT_AUTHOR_DATE=\"$NOW_DATE\"; GIT_COMMITTER_DATE=\"$NOW_DATE\";' $1..HEAD"
[core]
	excludesfile = ~/.gitignore_global
	pager = less -FRSX
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true
[merge]
	ff = false
[diff]
	tool = vimdiff
[diff "tar"]
	binary = true
	textconv = tar --to-stdout -xf
[diff "tar-gz"]
	binary = true
	textconv = tar --to-stdout -xzf
[diff "tar-bz2"]
	binary = true
	textconv = tar --to-stdout -xjf
[difftool]
	prompt = false
[hub]
	protocol = ssh
[url "git@github.com:"]
	insteadOf = https://github.com/
[include]
	# Source an optional device-specific config file
	path = .gitconfig_device
